name: test

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  clone_repository:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get the date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: Clone TheAnimeScripter repository
        uses: actions/checkout@v4
        with:
          repository: NevermindNilas/TheAnimeScripter
          path: TheAnimeScripter
          submodules: recursive

      - name: Upload repository as artifact
        uses: actions/upload-artifact@v3
        with:
          name: TheAnimeScripter
          path: TheAnimeScripter

  create_release:
    needs: clone_repository
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      date: ${{ needs.clone_repository.outputs.date }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          tag_name: TAS_${{ needs.clone_repository.outputs.date }}
          release_name: TAS_${{ needs.clone_repository.outputs.date }}
          draft: true

  build_full_windows:
    needs: [clone_repository, create_release]
    runs-on: windows-latest
    steps:
      - name: Download repository artifact
        uses: actions/download-artifact@v3
        with:
          name: TheAnimeScripter
          path: TheAnimeScripter

      - name: Fetch latest changes
        run: |
          cd TheAnimeScripter
          git fetch --all
          git reset --hard origin/main

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.4"

      - name: Run full build script
        run: |
          cd TheAnimeScripter
          python build.py --output dist-full

      - name: Compress full directory
        run: |
          cd TheAnimeScripter/dist-full/main/
          7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=273m ../../../TAS_${{ needs.create_release.outputs.date }}_Full_Windows.7z *

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: TAS_${{ needs.create_release.outputs.date }}_Full_Windows.7z
          asset_name: TAS_${{ needs.create_release.outputs.date }}_Full_Windows.7z
          asset_content_type: application/x-7z-compressed

  build_full_linux:
    needs: [clone_repository, create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Download repository artifact
        uses: actions/download-artifact@v3
        with:
          name: TheAnimeScripter
          path: TheAnimeScripter

      - name: Fetch latest changes
        run: |
          cd TheAnimeScripter
          git fetch --all
          git reset --hard origin/main

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.4"

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: "12.4.0"

      - name: Run full build script
        run: |
          cd TheAnimeScripter
          python build-linux.py --output dist-full

      - name: Compress full directory
        run: |
          cd TheAnimeScripter/dist/main/
          7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=273m ../../../TAS_${{ needs.create_release.outputs.date }}_Full_Linux.7z *

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: TAS_${{ needs.create_release.outputs.date }}_Full_Linux.7z
          asset_name: TAS_${{ needs.create_release.outputs.date }}_Full_Linux.7z
          asset_content_type: application/x-7z-compressed

  build_lite_windows:
    needs: [clone_repository, create_release]
    runs-on: windows-latest
    steps:
      - name: Download repository artifact
        uses: actions/download-artifact@v3
        with:
          name: TheAnimeScripter
          path: TheAnimeScripter

      - name: Fetch latest changes
        run: |
          cd TheAnimeScripter
          git fetch --all
          git reset --hard origin/main

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.4"

      - name: Run lite build script
        run: |
          cd TheAnimeScripter
          python build-lite.py --output dist-lite

      - name: Compress lite directory
        run: |
          cd TheAnimeScripter/dist-lite/main/
          7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=273m ../../../TAS_${{ needs.create_release.outputs.date }}_Lite_Windows.7z *

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: TAS_${{ needs.create_release.outputs.date }}_Lite_Windows.7z
          asset_name: TAS_${{ needs.create_release.outputs.date }}_Lite_Windows.7z
          asset_content_type: application/x-7z-compressed
    
  cleanup:
    runs-on: ubuntu-latest
    needs: [create_release, build_full_windows, build_full_linux, build_lite_windows]
    steps:
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}