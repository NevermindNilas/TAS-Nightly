name: Build-All-Platforms-Nightly

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
      date: ${{ steps.date.outputs.time }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Clone TheAnimeScripter repository
        uses: actions/checkout@v4
        with:
          repository: NevermindNilas/TheAnimeScripter
          path: TheAnimeScripter
          submodules: recursive

      - name: Extract version
        id: get_version
        run: |
          cd TheAnimeScripter
          echo "version=$(python -c 'import src.version; print(src.version.__version__)')" >> $GITHUB_OUTPUT

      - name: Get Date
        id: date
        uses: Kaven-Universe/github-action-current-date-time@v1.4.0
        with:
          format: "YYYY_MM_DD_HH"

      - name: Print version
        run: echo ${{ steps.get_version.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          tag_name: TAS_${{ steps.date.outputs.time }}
          release_name: TAS_${{ steps.date.outputs.time }}
          draft: false
          prerelease: false

  Build_Full_Windows:
    needs: setup
    runs-on: windows-latest
    steps:
      - name: Clone TheAnimeScripter repository
        uses: actions/checkout@v4
        with:
          repository: NevermindNilas/TheAnimeScripter
          path: TheAnimeScripter
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.3"

      - name: Run full build script
        run: |
          cd TheAnimeScripter
          python build.py

      - name: Compress full directory
        run: |
          cd TheAnimeScripter/dist-portable/main/
          7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=1024m ../../TAS_${{ needs.setup.outputs.date }}_Windows.7z *

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
        with:
          upload_url: ${{ needs.setup.outputs.upload_url }}
          asset_path: TheAnimeScripter/TAS_${{ needs.setup.outputs.date }}_Windows.7z
          asset_name: TAS_${{ needs.setup.outputs.date }}_Windows.7z
          asset_content_type: application/x-7z-compressed

  #Build_Lite_Windows:
  #  needs: setup
  #  runs-on: windows-latest
  #  steps:
  #    - name: Clone TheAnimeScripter repository
  #      uses: actions/checkout@v4
  #      with:
  #        repository: NevermindNilas/TheAnimeScripter
  #        path: TheAnimeScripter
  #        submodules: recursive
#
  #    - name: Set up Python
  #      uses: actions/setup-python@v5
  #      with:
  #        python-version: "3.13.3"
#
  #    - name: Run lite build script
  #      run: |
  #        cd TheAnimeScripter
  #        python build-lite.py
#
  #    - name: Compress lite directory
  #      run: |
  #        cd TheAnimeScripter/dist-lite/main/
  #        7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=1024m ../../TAS_${{ needs.setup.outputs.date }}_Lite_Windows.7z *
#
  #    - name: Upload Release Asset
  #      uses: actions/upload-release-asset@v1
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.TAS }}
  #      with:
  #        upload_url: ${{ needs.setup.outputs.upload_url }}
  #        asset_path: TheAnimeScripter/TAS_${{ needs.setup.outputs.date }}_Lite_Windows.7z
  #        asset_name: TAS_${{ needs.setup.outputs.date }}_Lite_Windows.7z
  #        asset_content_type: application/x-7z-compressed

#  Build_Lite_Linux:
#    needs: setup
#    runs-on: ubuntu-latest
#    steps:
#      - name: Clone TheAnimeScripter repository
#        uses: actions/checkout@v4
#        with:
#          repository: NevermindNilas/TheAnimeScripter
#          path: TheAnimeScripter
#          submodules: recursive
#
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: "3.13.3"
#
#      - name: Run lite build script
#        run: |
#          cd TheAnimeScripter
#          python build-linux-lite.py
#
#      - name: Compress lite directory
#        run: |
#          cd TheAnimeScripter/dist-lite/main/
#          7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=1024m ../../TAS_${{ needs.setup.outputs.date }}_Lite_Linux.7z *
#
  #    - name: Upload Release Asset
  #      uses: actions/upload-release-asset@v1
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.TAS }}
  #      with:
  #        upload_url: ${{ needs.setup.outputs.upload_url }}
  #        asset_path: TheAnimeScripter/TAS_${{ needs.setup.outputs.date }}_Lite_Linux.7z
  #        asset_name: TAS_${{ needs.setup.outputs.date }}_Lite_Linux.7z
  #        asset_content_type: application/x-7z-compressed

  # Build_Full_Linux:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone TheAnimeScripter repository
  #       uses: actions/checkout@v4
  #       with:
  #         repository: NevermindNilas/TheAnimeScripter
  #         path: TheAnimeScripter
  #         submodules: recursive

  #     - name: Free Disk Space (Ubuntu)
  #       uses: jlumbroso/free-disk-space@main
  #       with:
  #         tool-cache: false
  #         android: true
  #         dotnet: true
  #         haskell: true
  #         large-packages: true
  #         docker-images: true
  #         swap-storage: true

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12.7"

  #     - name: Run full build script
  #       run: |
  #         cd TheAnimeScripter
  #         python build-linux.py

  #     - name: Compress full directory
  #       run: |
  #         cd TheAnimeScripter/dist-full/main/
  #         7z a -t7z -m0=lzma2 -mx=9 -ms=1536m -md=1024m ../../TAS_${{ needs.setup.outputs.date }}_Full_Linux.7z *

  #     - name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.TAS }}
  #       with:
  #         upload_url: ${{ needs.setup.outputs.upload_url }}
  #         asset_path: TheAnimeScripter/TAS_${{ needs.setup.outputs.date }}_Full_Linux.7z
  #         asset_name: TAS_${{ needs.setup.outputs.date }}_Full_Linux.7z
  #         asset_content_type: application/x-7z-compressed

  delete_old_releases:
    needs:
      - Build_Lite_Windows
      #- Build_Lite_Linux
      - Build_Full_Windows
      #- Build_Full_Linux
    runs-on: ubuntu-latest
    steps:
      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 5
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.TAS }}
